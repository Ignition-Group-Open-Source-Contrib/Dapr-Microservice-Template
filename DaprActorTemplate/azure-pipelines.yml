# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
- repo: self
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    variables:
    - group: '<Insert Microservices Pipeline variables group Name Here>'
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'

 

    steps:      
  

       
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '**/$safeprojectname$/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag) 
       
    - task: PublishPipelineArtifact@0
      inputs:
              targetPath: '$(Pipeline.Workspace)'

- stage: DeployToDev
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: Deploy
    variables:
    - group: '<Insert Microservices Pipeline variables group Name for Dev Here>'
    displayName: Deploying to Development
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'    
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection) 
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(System.ArtifactsDirectory)/**/$safeprojectname$deploy.yaml 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)


- stage: DeployToProd
  displayName: Deploy to prod
  dependsOn: DeployToDev
  jobs:
  - deployment: Deploy
    variables:
    - group: '<Insert Microservices Pipeline variables group Name for production Here>'
    displayName: Deploying to Production
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'    
          
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection) 
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(System.ArtifactsDirectory)/**/$safeprojectname$deployProd.yaml 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

