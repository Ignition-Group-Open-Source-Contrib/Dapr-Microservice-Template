



# THIS FILE IS AUTOGENERATED BY A TOOL
# IF YOU EDIT IT ANY CHANGES YOU MAKE WILL BE LOST

# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
- repo: self
  
trigger:
  branches:
    include:
    - master
    - develop
    - features/*
  paths:
    include:
    - MicroserviceSolution/DaprMicroserviceTemplate/*
    exclude:
    - README.md
  
stages:
- stage: Build
  displayName: Build stage

  jobs:  
  - job: Build
    variables:
    - group: 'Microservices Pipeline variables-devtest'
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'

 

    steps:     
      
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $daprAppName$
        dockerfile: '**/DaprMicroserviceTemplate/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: './MicroserviceSolution/DaprMicroserviceTemplate'
        tags: |
          $(tag) 
       
    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: MicroserviceSolution/DaprMicroserviceTemplate/deploy

- stage: TagAsLatest
  displayName: TagAsLatest
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:  
  - job: TagAsLatest
    displayName: TagAsLatest
    pool:
      vmImage: 'ubuntu-latest'
    steps:            
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          docker login adlacrdev.azurecr.io -u <Fill in registryUser Here> -p <Fill in Password Here>
          docker pull adlacrdev.azurecr.io/$daprAppName$:$(tag)
          docker tag adlacrdev.azurecr.io/$daprAppName$:$(tag) adlacrdev.azurecr.io/$daprAppName$:latest
          docker push adlacrdev.azurecr.io/$daprAppName$:latest
          
  

- stage: DeployToDev
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: Deploy
    variables:
    - group: 'Microservices Pipeline variables-devtest'
    displayName: Deploying to Development
    pool:
      name: 'PHP and Brandsites POOL'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:              
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection) 
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(Pipeline.Workspace)/drop/deployDev.yaml 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$daprAppName$:$(tag)


- stage: DeployToProd
  displayName: Deploy to prod
  dependsOn: TagAsLatest
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    variables:
    - group: 'Microservices Pipeline variables-prod'
    displayName: Deploying to Production
    pool:
      name: 'PHP and Brandsites POOL'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
              
          
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection) 
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(Pipeline.Workspace)/drop/deployProd.yaml  
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$daprAppName$:latest


